
> tachui@0.1.0 test /Users/whoughton/Dev/tach-ui/tachUI
> vitest run


 RUN  v3.2.4 /Users/whoughton/Dev/tach-ui/tachUI

stdout | packages/navigation/__tests__/real-world-scenarios.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/primitives/__tests__/integration/long-running-simulation.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark basic Text component rendering
Text Component Render Benchmark: {
  renderTime: [33m30.116736000000554[39m,
  memoryPeak: [33m57512344[39m,
  domNodes: [33m4[39m,
  status: [32m'pass'[39m
}

 ✓ packages/navigation/__tests__/real-world-scenarios.test.ts (26 tests) 74ms
stdout | packages/core/__tests__/integration/real-world-ecommerce.test.ts > Phase 4.1: E-commerce Checkout Flow Real-World Scenarios > Complete Purchase Journey > should handle complete product selection to order confirmation flow
E-commerce Checkout Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m8[39m,
  totalSteps: [33m8[39m,
  errors: [],
  duration: [33m5382[39m,
  performance: {
    memoryUsage: { initial: [33m48105608[39m, final: [33m46481344[39m, peak: [33m52516672[39m },
    domNodes: { initial: [33m59[39m, final: [33m61[39m, peak: [33m61[39m }
  }
}

=== Real-World Scenario Report ===
Scenario: Complete E-commerce Checkout
Success: ✅
Completion Rate: 100.0% (8/8)
Total Duration: 5382ms
Average Step Duration: 661.0ms

Performance:
- Memory Usage: 48105608 → 46481344 (Peak: 52516672)
- DOM Nodes: 59 → 61 (Peak: 61)



Step Performance:
- Verify Product List Loaded: 717ms
- Add First Product to Cart: 502ms
- Add Second Product to Cart: 509ms
- Proceed to Checkout: 695ms
- Fill Shipping Information: 537ms
- Continue to Payment: 689ms
- Fill Payment Information: 423ms
- Place Order: 1216ms


stdout | packages/core/__tests__/integration/real-world-auth.test.ts > Phase 4.3: User Authentication and Session Management Real-World Scenarios > Complete Authentication Flow > should handle complete user registration, login, and session management
Dashboard section found: [33mtrue[39m Display: block

stdout | packages/core/__tests__/integration/real-world-wizard.test.ts > Phase 4.2: Multi-step Wizard Form Real-World Scenarios > Complete Wizard Flow > should handle complete multi-step wizard form with navigation and validation
Multi-step Wizard Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m8[39m,
  totalSteps: [33m8[39m,
  errors: [],
  duration: [33m5622[39m,
  performance: {
    memoryUsage: { initial: [33m49116264[39m, final: [33m52165536[39m, peak: [33m52646128[39m },
    domNodes: { initial: [33m81[39m, final: [33m109[39m, peak: [33m109[39m }
  }
}

=== Real-World Scenario Report ===
Scenario: Complete Multi-step Wizard
Success: ✅
Completion Rate: 100.0% (8/8)
Total Duration: 5622ms
Average Step Duration: 661.6ms

Performance:
- Memory Usage: 49116264 → 52165536 (Peak: 52646128)
- DOM Nodes: 81 → 109 (Peak: 109)



Step Performance:
- Verify Initial Wizard State: 552ms
- Fill Personal Information: 470ms
- Navigate to Step 2: 737ms
- Fill Company Information: 464ms
- Navigate to Step 3: 691ms
- Fill Preferences: 448ms
- Navigate to Review Step: 724ms
- Complete Wizard Submission: 1207ms


stdout | packages/core/__tests__/integration/real-world-dashboard.test.ts > Phase 4.4: Dashboard with Real-time Data Updates Real-World Scenarios > Complete Dashboard Flow > should handle real-time dashboard updates, interactions, and data refresh
Dashboard Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m8[39m,
  totalSteps: [33m8[39m,
  errors: [],
  duration: [33m5822[39m,
  performance: {
    memoryUsage: { initial: [33m57018720[39m, final: [33m61018560[39m, peak: [33m60886872[39m },
    domNodes: { initial: [33m119[39m, final: [33m104[39m, peak: [33m139[39m }
  }
}

=== Real-World Scenario Report ===
Scenario: Real-time Dashboard Operations
Success: ✅
Completion Rate: 100.0% (8/8)
Total Duration: 5822ms
Average Step Duration: 658.4ms

Performance:
- Memory Usage: 57018720 → 61018560 (Peak: 60886872)
- DOM Nodes: 119 → 104 (Peak: 139)



Step Performance:
- Verify Initial Dashboard State: 791ms
- Test Manual Data Refresh: 1207ms
- Test Chart Interactions: 558ms
- Test Order Search Functionality: 409ms
- Test Status Filter: 421ms
- Test Notification Management: 690ms
- Test Auto-refresh Toggle: 724ms
- Clear All Notifications: 467ms


 ✓ packages/core/__tests__/performance/memory-usage-tracking.test.ts (23 tests) 9862ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Monitoring Core > should start and stop monitoring correctly  613ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Monitoring Core > should take memory snapshots at regular intervals  352ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Alert System > should trigger heap usage alerts when thresholds are exceeded  308ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Alert System > should detect memory growth rate alerts  402ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Alert System > should detect memory leaks over time  1007ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Alert System > should detect garbage collection pressure  307ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Alert System > should respect alert cooldown periods  503ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Analysis and Reporting > should generate comprehensive memory analysis  631ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Analysis and Reporting > should detect different memory usage patterns  603ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Analysis and Reporting > should estimate memory leak rates accurately  1206ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Analysis and Reporting > should calculate garbage collection efficiency  805ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Analysis and Reporting > should provide contextual recommendations based on memory patterns  1104ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Memory Usage Reporting > should generate comprehensive memory usage reports for multiple tests  608ms
   ✓ Phase 5.3: Memory Usage Tracking and Alerts System > Edge Cases and Error Handling > should handle custom thresholds correctly  301ms
stdout | packages/core/__tests__/integration/real-world-ecommerce.test.ts > Phase 4.1: E-commerce Checkout Flow Real-World Scenarios > Complete Purchase Journey > should handle cart management edge cases
Cart Edge Cases Test Result: { success: [33mtrue[39m, completedSteps: [33m3[39m, totalSteps: [33m3[39m, errors: [] }

stdout | packages/core/__tests__/integration/real-world-social.test.ts > Phase 4.5: Social Media Feed with Infinite Scroll Real-World Scenarios > Complete Social Feed Flow > should handle infinite scroll, user interactions, and real-time updates
Social Feed Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m8[39m,
  totalSteps: [33m8[39m,
  errors: [],
  duration: [33m6837[39m,
  performance: {
    memoryUsage: { initial: [33m57793080[39m, final: [33m56307272[39m, peak: [33m61660480[39m },
    domNodes: { initial: [33m141[39m, final: [33m289[39m, peak: [33m289[39m }
  }
}

=== Real-World Scenario Report ===
Scenario: Social Media Feed with Infinite Scroll
Success: ✅
Completion Rate: 100.0% (8/8)
Total Duration: 6837ms
Average Step Duration: 761.5ms

Performance:
- Memory Usage: 57793080 → 56307272 (Peak: 61660480)
- DOM Nodes: 141 → 289 (Peak: 289)



Step Performance:
- Verify Initial Feed State: 702ms
- Test Post Interactions - Like: 500ms
- Test Comment Toggle: 443ms
- Test Share Functionality: 557ms
- Test Search Functionality: 563ms
- Clear Search and Test Feed Refresh: 718ms
- Test New Post Creation: 791ms
- Test Infinite Scroll Loading: 1818ms


stdout | packages/core/__tests__/integration/real-world-wizard.test.ts > Phase 4.2: Multi-step Wizard Form Real-World Scenarios > Complete Wizard Flow > should handle wizard navigation edge cases
Wizard Navigation Test Result: { success: [33mtrue[39m, completedSteps: [33m3[39m, errors: [] }

 ✓ packages/core/__tests__/integration/real-world-wizard.test.ts (2 tests) 6991ms
   ✓ Phase 4.2: Multi-step Wizard Form Real-World Scenarios > Complete Wizard Flow > should handle complete multi-step wizard form with navigation and validation  5702ms
   ✓ Phase 4.2: Multi-step Wizard Form Real-World Scenarios > Complete Wizard Flow > should handle wizard navigation edge cases  1287ms
stdout | packages/primitives/__tests__/integration/memory-leak-component.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/integration/real-world-ecommerce.test.ts > Phase 4.1: E-commerce Checkout Flow Real-World Scenarios > Error Handling > should handle form validation errors gracefully
Form Validation Test Result: { success: [33mtrue[39m, completedSteps: [33m3[39m, errors: [] }

 ✓ packages/core/__tests__/integration/real-world-ecommerce.test.ts (3 tests) 8195ms
   ✓ Phase 4.1: E-commerce Checkout Flow Real-World Scenarios > Complete Purchase Journey > should handle complete product selection to order confirmation flow  5420ms
   ✓ Phase 4.1: E-commerce Checkout Flow Real-World Scenarios > Complete Purchase Journey > should handle cart management edge cases  1448ms
   ✓ Phase 4.1: E-commerce Checkout Flow Real-World Scenarios > Error Handling > should handle form validation errors gracefully  1324ms
stdout | packages/core/__tests__/integration/real-world-auth.test.ts > Phase 4.3: User Authentication and Session Management Real-World Scenarios > Complete Authentication Flow > should handle complete user registration, login, and session management
Login Dashboard section found: [33mtrue[39m Display: block

stdout | packages/core/__tests__/integration/real-world-auth.test.ts > Phase 4.3: User Authentication and Session Management Real-World Scenarios > Complete Authentication Flow > should handle complete user registration, login, and session management
Authentication Flow Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m8[39m,
  totalSteps: [33m8[39m,
  errors: [],
  duration: [33m8749[39m,
  performance: {
    memoryUsage: { initial: [33m53312384[39m, final: [33m51635584[39m, peak: [33m57990680[39m },
    domNodes: { initial: [33m58[39m, final: [33m58[39m, peak: [33m58[39m }
  }
}

=== Real-World Scenario Report ===
Scenario: Complete Authentication Flow
Success: ✅
Completion Rate: 100.0% (8/8)
Total Duration: 8749ms
Average Step Duration: 1058.9ms

Performance:
- Memory Usage: 53312384 → 51635584 (Peak: 57990680)
- DOM Nodes: 58 → 58 (Peak: 58)



Step Performance:
- Verify Initial Login State: 499ms
- Test Invalid Login: 1429ms
- Switch to Registration: 433ms
- Complete User Registration: 2784ms
- Verify Protected Content Access: 485ms
- Test Session Persistence: 367ms
- Logout and Clear Session: 766ms
- Test Existing User Login: 1708ms


stdout | packages/core/__tests__/integration/real-world-auth.test.ts > Phase 4.3: User Authentication and Session Management Real-World Scenarios > Complete Authentication Flow > should handle password reset workflow
Password Reset Test Result: { success: [33mtrue[39m, completedSteps: [33m3[39m, errors: [] }

 ✓ packages/core/__tests__/integration/real-world-auth.test.ts (2 tests) 10099ms
   ✓ Phase 4.3: User Authentication and Session Management Real-World Scenarios > Complete Authentication Flow > should handle complete user registration, login, and session management  8792ms
   ✓ Phase 4.3: User Authentication and Session Management Real-World Scenarios > Complete Authentication Flow > should handle password reset workflow  1298ms
stdout | packages/core/__tests__/integration/real-world-dashboard.test.ts > Phase 4.4: Dashboard with Real-time Data Updates Real-World Scenarios > Complete Dashboard Flow > should handle dashboard data loading states and error recovery
Dashboard Error Handling Test Result: { success: [33mtrue[39m, completedSteps: [33m3[39m, errors: [] }

 ✓ packages/core/__tests__/integration/real-world-dashboard.test.ts (2 tests) 10241ms
   ✓ Phase 4.4: Dashboard with Real-time Data Updates Real-World Scenarios > Complete Dashboard Flow > should handle real-time dashboard updates, interactions, and data refresh  5875ms
   ✓ Phase 4.4: Dashboard with Real-time Data Updates Real-World Scenarios > Complete Dashboard Flow > should handle dashboard data loading states and error recovery  4360ms
stdout | packages/core/__tests__/integration/real-world-social.test.ts > Phase 4.5: Social Media Feed with Infinite Scroll Real-World Scenarios > Complete Social Feed Flow > should handle social feed performance with large datasets
Social Feed Performance Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m3[39m,
  errors: [],
  performance: {
    stepDurations: [ [36m[Object][39m, [36m[Object][39m, [36m[Object][39m ],
    memoryUsage: { initial: [33m58115712[39m, final: [33m66215920[39m, peak: [33m65849952[39m },
    domNodes: { initial: [33m12[39m, final: [33m312[39m, peak: [33m312[39m }
  }
}

 ✓ packages/core/__tests__/integration/real-world-social.test.ts (2 tests) 11261ms
   ✓ Phase 4.5: Social Media Feed with Infinite Scroll Real-World Scenarios > Complete Social Feed Flow > should handle infinite scroll, user interactions, and real-time updates  6913ms
   ✓ Phase 4.5: Social Media Feed with Infinite Scroll Real-World Scenarios > Complete Social Feed Flow > should handle social feed performance with large datasets  4339ms
stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark complex List component with many items
List Component Large Dataset Benchmark: {
  renderTime: [33m2950.553999666667[39m,
  memoryPeak: [33m90583824[39m,
  domNodes: [33m4[39m,
  avgTimePerItem: [33m2.950553999666667[39m,
  status: [32m'fail'[39m
}

stdout | packages/primitives/__tests__/integration/error-recovery.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/symbols/__tests__/components/Symbol-animations.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/integration/memory-leak-component.test.ts (11 tests) 6242ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Button Component Memory Leak Tests > should not leak memory during rapid creation/destruction cycles  1434ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Button Component Memory Leak Tests > should properly clean up component instances  309ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Button Component Memory Leak Tests > should handle reactive effect cleanup properly  406ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Button Component Memory Leak Tests > should properly handle ColorAsset reactivity without leaks  340ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Reactive System Memory Leak Tests > should not leak memory with signal creation and disposal  535ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Reactive System Memory Leak Tests > should handle rapid effect creation and disposal  408ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Component Lifecycle Edge Cases > should handle component cleanup before DOM ready  328ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Component Lifecycle Edge Cases > should handle double cleanup calls gracefully  306ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Component Lifecycle Edge Cases > should handle component creation with null/undefined props  323ms
   ✓ Phase 2.1: TachUI Component Memory Leak Testing > Long-Running Application Simulation > should handle long-running component interactions  1847ms
stdout | packages/core/__tests__/integration/real-world-simple.test.ts > Phase 4.1: Simple Real-World Scenario Validation > should execute a basic button click scenario
Basic Click Test Result: {
  success: [33mtrue[39m,
  completedSteps: [33m5[39m,
  totalSteps: [33m5[39m,
  errors: [],
  duration: [33m2001[39m
}

stderr | packages/forms/__tests__/edge-cases.test.ts > Forms Edge Cases and Error Boundaries > Validation Edge Cases > should handle invalid validation rule configurations
Unknown validation rule: unknownRule
Unknown built-in validation rule: nonexistent

stdout | packages/forms/__tests__/edge-cases.test.ts > Forms Edge Cases and Error Boundaries > Form State Edge Cases > should handle form state with invalid initial values
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/edge-cases.test.ts > Forms Edge Cases and Error Boundaries > Form State Edge Cases > should handle form state with invalid initial values
🔍 [@tachui/advanced-forms] Registered 6 component validators

stdout | packages/primitives/__tests__/integration/error-boundary.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/integration/real-world-simple.test.ts > Phase 4.1: Simple Real-World Scenario Validation > should handle form input scenario
Form Input Test Result: { success: [33mtrue[39m, completedSteps: [33m3[39m, totalSteps: [33m3[39m, errors: [] }

 ✓ packages/core/__tests__/integration/real-world-simple.test.ts (2 tests) 3260ms
   ✓ Phase 4.1: Simple Real-World Scenario Validation > should execute a basic button click scenario  2012ms
   ✓ Phase 4.1: Simple Real-World Scenario Validation > should handle form input scenario  1238ms
stdout | packages/forms/__tests__/edge-cases.test.ts > Forms Edge Cases and Error Boundaries > Security Edge Cases > should handle validation rule injection attempts
potential code execution

 ✓ packages/primitives/__tests__/integration/error-recovery.test.ts (19 tests) 4631ms
   ✓ Phase 2.4: Error Recovery and Retry Mechanisms Tests > Recovery Strategies > should use network error recovery strategy  3775ms
 ✓ packages/symbols/__tests__/components/Symbol-animations.test.ts (23 tests) 4366ms
   ✓ Symbol Component - Animation Integration > Basic Animation Effects > should apply bounce effect with default configuration  383ms
   ✓ Symbol Component - Animation Integration > Animation Speed Control > should add speed modifier classes  310ms
   ✓ Symbol Component - Animation Integration > Performance Optimization > should handle high-performance effects efficiently  317ms
 ✓ packages/core/__tests__/integration/foundation-demo.test.ts (17 tests) 2873ms
   ✓ Phase 1 Foundation - Testing Framework Validation > Memory Leak Testing Framework > should track memory usage without auto-setup  394ms
   ✓ Phase 1 Foundation - Testing Framework Validation > Memory Leak Testing Framework > should detect memory growth patterns  1363ms
   ✓ Phase 1 Foundation - Testing Framework Validation > Memory Leak Testing Framework > should stress test object creation and cleanup  785ms
 ✓ packages/primitives/__tests__/integration/error-boundary.test.ts (12 tests) 2045ms
   ✓ Phase 2.2: Error Boundary Testing for TachUI Components > Async Operation Error Testing > should handle async action errors in components  340ms
   ✓ Phase 2.2: Error Boundary Testing for TachUI Components > Async Operation Error Testing > should handle network simulation errors  306ms
   ✓ Phase 2.2: Error Boundary Testing for TachUI Components > Multiple Error Scenario Testing > should handle multiple concurrent errors  589ms
   ✓ Phase 2.2: Error Boundary Testing for TachUI Components > Performance Impact Testing > should measure error handling performance impact  569ms
 ✓ packages/forms/__tests__/edge-cases.test.ts (29 tests) 2954ms
   ✓ Forms Edge Cases and Error Boundaries > Form State Edge Cases > should handle form state with invalid initial values  438ms
   ✓ Forms Edge Cases and Error Boundaries > Component Edge Cases > should handle text inputs with extreme values  608ms
   ✓ Forms Edge Cases and Error Boundaries > Async Operation Edge Cases > should handle validation timeout scenarios  1113ms
stdout | packages/forms/__tests__/basic-integration.test.ts > @tachui/forms unified package > should export main components
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/basic-integration.test.ts > @tachui/forms unified package > should export main components
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/basic-integration.test.ts (2 tests) 2376ms
   ✓ @tachui/forms unified package > should export main components  2367ms
stdout | packages/forms/__tests__/integration-workflows.test.ts > Form Integration Workflows > Complete Form Workflow > should handle full user registration form workflow
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/integration-workflows.test.ts > Form Integration Workflows > Complete Form Workflow > should handle full user registration form workflow
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/integration-workflows.test.ts (20 tests) 773ms
   ✓ Form Integration Workflows > Complete Form Workflow > should handle full user registration form workflow  312ms
   ✓ Form Integration Workflows > Component Interaction Tests > should handle TextField and Checkbox interaction  304ms
stdout | packages/forms/__tests__/real-dom-integration.test.ts > Real DOM Integration Testing > Component DOM Rendering > should render TextField component to real DOM
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/real-dom-integration.test.ts > Real DOM Integration Testing > Component Integration in DOM Context > should integrate multiple components within form context
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/real-dom-integration.test.ts (23 tests) 607ms
   ✓ Real DOM Integration Testing > Component Integration in DOM Context > should handle complex form workflows  464ms
stdout | packages/forms/__tests__/enhanced-coverage.test.ts > Enhanced Coverage Testing > Performance Essentials > should handle large form state efficiently
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/forms/__tests__/enhanced-coverage.test.ts (31 tests) 1488ms
   ✓ Enhanced Coverage Testing > Performance Essentials > should handle large form state efficiently  985ms
stdout | packages/symbols/__tests__/utils/icon-loader.test.ts > IconLoader > Error Handling > handles icon set registry errors
Auto-registered Lucide icon set

stdout | packages/primitives/__tests__/css-classes/performance-and-real-world.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/symbols/__tests__/utils/icon-loader.test.ts (29 tests) 847ms
stdout | packages/forms/__tests__/form-state.test.ts > Form State Management > should create form state
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/form-state.test.ts
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/form-state.test.ts (3 tests) 363ms
   ✓ Form State Management > should create form state  355ms
 ✓ packages/primitives/__tests__/css-classes/performance-and-real-world.test.ts (13 tests) 444ms
   ✓ CSS Classes Enhancement - Performance and Real-World Usage > Memory Usage and Cleanup > should not accumulate memory with temporary components  426ms
 ✓ packages/core/__tests__/gradients/comprehensive-gradients.test.ts (17 tests) 1078ms
   ✓ Comprehensive Gradient Integration > All Gradient Types with Background Modifier > applies RadialGradient through background modifier  324ms
stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Memory Usage Baselines > should benchmark memory usage with component creation and destruction
Reactive State Updates Benchmark: {
  renderTime: [33m4020.059514000002[39m,
  stateUpdates: [33m500[39m,
  avgUpdateTime: [33m8.040119028000005[39m,
  status: [32m'fail'[39m
}

 ✓ packages/core/__tests__/gradients/phase4-features.test.ts (41 tests) 28ms
stdout | packages/forms/__tests__/selection-components.test.ts > Selection Components > Checkbox Component > should export Checkbox component
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/selection-components.test.ts > Selection Components > Radio Component > should export Radio component
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/selection-components.test.ts (37 tests) 574ms
   ✓ Selection Components > Checkbox Component > should export Checkbox component  497ms
stdout | packages/grid/__tests__/components/grid-accessibility-styling.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/grid/__tests__/components/grid-accessibility-styling.test.ts (30 tests) 10ms
 ✓ packages/primitives/__tests__/integration/long-running-simulation.test.ts (10 tests) 28074ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Standard Application Scenarios > should handle interactive dashboard scenario  4308ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Standard Application Scenarios > should handle data entry form scenario  2707ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Standard Application Scenarios > should handle real-time updates scenario  2213ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Custom Application Patterns > should handle custom user interaction patterns  2877ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Custom Application Patterns > should handle component lifecycle stress patterns  3813ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Stress Testing Scenarios > should handle medium intensity stress test  3204ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Stress Testing Scenarios > should handle high frequency reactive updates  2718ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Error and Recovery Patterns > should handle applications with occasional errors  2589ms
   ✓ Phase 2.3: Long-Running Application Simulation Tests > Performance Monitoring > should track performance degradation over time  3622ms
stdout | packages/navigation/__tests__/navigation-stack.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/modifiers/phase1-modifiers.test.ts (24 tests) 146ms
stdout | packages/core/__tests__/modifiers/advanced-gesture-modifiers.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/modifiers/phase2-modifiers.test.ts (32 tests) 18ms
stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Memory Usage Baselines > should benchmark memory usage with component creation and destruction
Memory Usage Benchmark: {
  memoryLeak: [33m2021221.3333333333[39m,
  peakMemory: [33m107231664[39m,
  memoryGrowth: [33m0[39m,
  status: [32m'fail'[39m
}

 ✓ packages/navigation/__tests__/navigation-stack.test.ts (20 tests) 13ms
 ✓ packages/core/__tests__/modifiers/advanced-gesture-modifiers.test.ts (36 tests) 119ms
stdout | packages/responsive/__tests__/modifiers/responsive/responsive-integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Memory Usage Baselines > should benchmark DOM manipulation performance
DOM Manipulation Benchmark: {
  renderTime: [33m131.15605533333533[39m,
  totalOperations: [33m550[39m,
  avgOperationTime: [33m0.2384655551515188[39m,
  finalNodeCount: [33m800[39m,
  status: [32m'pass'[39m
}

 ✓ packages/responsive/__tests__/modifiers/responsive/responsive-integration.test.ts (8 tests) 37ms
 ✓ packages/core/__tests__/modifiers/size.test.ts (13 tests) 37ms
stdout | packages/devtools/__tests__/runtime/error-handling.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > DevTools initialization > should create singleton instance
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > DevTools initialization > should start disabled by default
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > DevTools initialization > should accept configuration
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > enable/disable functionality > should enable dev tools
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > enable/disable functionality > should enable dev tools
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > enable/disable functionality > should disable dev tools
🛠️ TachUI DevTools enabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > enable/disable functionality > should disable dev tools
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > enable/disable functionality > should enable with configuration
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > enable/disable functionality > should enable with configuration
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should register component instances
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should register component instances
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should handle parent-child relationships
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should handle parent-child relationships
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should not register components when disabled
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should not register components when disabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component registration > should not register components when disabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component unregistration > should unregister component instances
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component unregistration > should unregister component instances
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component unregistration > should handle parent-child unregistration
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component unregistration > should handle parent-child unregistration
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component updates > should update component data
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component updates > should update component data
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component updates > should not update when disabled
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component updates > should not update when disabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component updates > should not update when disabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component tree queries > should get root components
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component tree queries > should get root components
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component tree queries > should find components by name
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component tree queries > should find components by name
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component tree queries > should get component by ID
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > component tree queries > should get component by ID
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > debug events > should track component mount events
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > debug events > should track component mount events
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > debug events > should track component unmount events
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > debug events > should track component unmount events
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > debug events > should limit debug events array size
🛠️ TachUI DevTools enabled

stderr | packages/devtools/__tests__/runtime/error-handling.test.ts > ErrorBoundary > Error Boundary Creation > should create error boundary with custom fallback
[TEST ERROR] TachUI Error: unknown Error: Child error
    at Object.render [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:254:17[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/src/runtime/error-boundary.ts:370:30
    at Array.flatMap (<anonymous>)
    at ErrorBoundary.render [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/src/runtime/error-boundary.ts:369:28[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:262:18
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m

stderr | packages/devtools/__tests__/runtime/error-handling.test.ts > ErrorBoundary > Error Handling > should catch and handle component errors
[TEST ERROR] TachUI Error: unknown Error: Component error
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:276:21
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | packages/devtools/__tests__/runtime/error-handling.test.ts > ErrorBoundary > Error Handling > should retry failed operations
[TEST ERROR] TachUI Error: unknown Error: Test error
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:288:21
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | packages/devtools/__tests__/runtime/error-handling.test.ts > ErrorBoundary > Error Handling > should handle recovery strategies
[TEST ERROR] TachUI Error: unknown Error: Test error
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:314:21
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | packages/devtools/__tests__/runtime/error-handling.test.ts > ErrorBoundary > Error Boundary Rendering > should render fallback UI when error occurs
[TEST ERROR] TachUI Error: unknown Error: Test error
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:340:21
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | packages/devtools/__tests__/runtime/error-handling.test.ts > ErrorBoundary > Error Boundary Rendering > should render custom fallback when provided
[TEST ERROR] TachUI Error: unknown Error: Custom test error
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/devtools/__tests__/runtime/error-handling.test.ts:360:21
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > debug events > should limit debug events array size
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should add warnings to components
🛠️ TachUI DevTools enabled

stderr | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should add warnings to components
⚠️ [Button] Slow render detected

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should add warnings to components
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should add errors to components
🛠️ TachUI DevTools enabled

stderr | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should add errors to components
[TEST ERROR] ❌ [Button] Component crashed Component crashed

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should add errors to components
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should not add warnings when disabled
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should not add warnings when disabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > warnings and errors > should not add warnings when disabled
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > performance summary > should calculate performance summary
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > performance summary > should calculate performance summary
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > performance summary > should identify slow components
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > performance summary > should identify slow components
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > data export > should export debug data
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > data export > should export debug data
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > data export > should clear all data
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > data export > should clear all data
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > global functions > should enable development mode globally
🛠️ TachUI DevTools enabled
🚀 TachUI Development Mode enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > global functions > should enable development mode globally
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > global functions > should get component tree globally
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > reactive debugging > should track reactive operations
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > reactive debugging > should track reactive operations
🛠️ TachUI DevTools disabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > reactive debugging > should track context changes
🛠️ TachUI DevTools enabled

stdout | packages/devtools/__tests__/inspector/inspector.test.ts > Component Inspector > reactive debugging > should track context changes
🛠️ TachUI DevTools disabled

 ✓ packages/devtools/__tests__/inspector/inspector.test.ts (30 tests) 422ms
   ✓ Component Inspector > debug events > should limit debug events array size  412ms
 ✓ packages/devtools/__tests__/runtime/error-handling.test.ts (50 tests) 302ms
 ✓ packages/core/__tests__/modifiers/basic-sanitizer-security.test.ts (53 tests) 506ms
stdout | packages/primitives/__tests__/layout/Divider.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/gradients/background-modifier.test.ts (5 tests) 47ms
 ✓ packages/core/__tests__/performance/bundle-size-monitoring.test.ts (27 tests) 290ms
 ✓ packages/primitives/__tests__/layout/Divider.test.ts (43 tests) 220ms
stdout | packages/forms/__tests__/comprehensive-state.test.ts > Form State Management - Comprehensive > createField function > should create field with proper interface
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/comprehensive-state.test.ts
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/comprehensive-state.test.ts (6 tests) 877ms
   ✓ Form State Management - Comprehensive > createField function > should create field with proper interface  836ms
stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Complex Workflow Performance > should benchmark full application workflow performance
Complete Workflow Benchmark: {
  renderTime: [33m1393.741083666663[39m,
  totalOperations: [33m506[39m,
  itemsRendered: [33m500[39m,
  avgOperationTime: [33m2.7544290191040766[39m,
  status: [32m'pass'[39m
}

stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > should have run all performance benchmarks successfully
Collected 6 benchmark results

stdout | packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks

Total benchmarks run: 6

=== Performance Benchmark Report ===

Summary: 3 passed, 0 warnings, 3 failed


--- Benchmark Results ---
Status: PASS
Render Time: 30.12ms
Memory Peak: 54.85 MB
DOM Nodes: 4

Recommendations:
  - Potential memory leak detected - investigate cleanup logic

--- Benchmark Results ---
Status: FAIL
Render Time: 2950.55ms
Memory Peak: 86.39 MB
DOM Nodes: 4

Recommendations:
  - Render time 2950.55ms exceeds maximum 1000ms
  - Potential memory leak detected - investigate cleanup logic
  - Slow render time - consider code splitting or virtualization

--- Benchmark Results ---
Status: FAIL
Render Time: 4020.06ms
Memory Peak: 95.89 MB
DOM Nodes: 4

Recommendations:
  - Render time 4020.06ms exceeds maximum 500ms
  - Potential memory leak detected - investigate cleanup logic
  - Slow render time - consider code splitting or virtualization

--- Benchmark Results ---
Status: FAIL
Render Time: 2612.72ms
Memory Peak: 102.26 MB
DOM Nodes: 4

Recommendations:
  - Render time 2612.72ms exceeds maximum 2000ms
  - Potential memory leak detected - investigate cleanup logic
  - Slow render time - consider code splitting or virtualization

--- Benchmark Results ---
Status: PASS
Render Time: 131.16ms
Memory Peak: 102.91 MB
DOM Nodes: 4

Recommendations:
  - Potential memory leak detected - investigate cleanup logic
  - Slow render time - consider code splitting or virtualization

--- Benchmark Results ---
Status: PASS
Render Time: 1393.74ms
Memory Peak: 142.84 MB
DOM Nodes: 4

Recommendations:
  - Potential memory leak detected - investigate cleanup logic
  - Slow render time - consider code splitting or virtualization

Baseline data for future comparisons: {
  "Text Component Render": {
    "renderTime": 30.116736000000554,
    "memoryUsage": {
      "initial": 52960898.666666664,
      "peak": 57512344,
      "final": 55247973.333333336,
      "leak": 2287074.6666666665
    },
    "domMetrics": {
      "nodes": 4,
      "depth": 1,
      "updates": 100
    },
    "timing": {
      "setup": 2.530749999999898,
      "execution": 30.571791666665984,
      "cleanup": 22.938944333332376
    },
    "customMetrics": {
      "componentsRendered": 100
    }
  },
  "List Component Large Dataset": {
    "renderTime": 2950.553999666667,
    "memoryUsage": {
      "initial": 66393962.666666664,
      "peak": 90583824,
      "final": 80135741.33333333,
      "leak": 13741778.666666666
    },
    "domMetrics": {
      "nodes": 4,
      "depth": 1,
      "updates": 1000
    },
    "timing": {
      "setup": 14.360499666666632,
      "execution": 3229.5302776666667,
      "cleanup": 317.42055566666505
    },
    "customMetrics": {
      "itemsRendered": 1000,
      "avgTimePerItem": 2.950553999666667
    }
  },
  "Reactive State Updates": {
    "renderTime": 4020.059514000002,
    "memoryUsage": {
      "initial": 95043946.66666667,
      "peak": 100548424,
      "final": 97992498.66666667,
      "leak": 2948552
    },
    "domMetrics": {
      "nodes": 4,
      "depth": 1,
      "updates": 500
    },
    "timing": {
      "setup": 11.17545833333376,
      "execution": 4100.093069333336,
      "cleanup": 4.259070000001278
    },
    "customMetrics": {
      "stateUpdates": 500,
      "avgUpdateTime": 8.040119028000005,
      "finalItemCount": 500
    }
  },
  "Component Lifecycle Memory Usage": {
    "renderTime": 2612.716388999999,
    "memoryUsage": {
      "initial": 99164525.33333333,
      "peak": 107231664,
      "final": 101185746.66666667,
      "leak": 2021221.3333333333
    },
    "domMetrics": {
      "nodes": 4,
      "depth": 1,
      "updates": 1000
    },
    "timing": {
      "setup": 4.243958333337408,
      "execution": 2613.436638666666,
      "cleanup": 0.05293066666733163
    },
    "customMetrics": {
      "cycles": 50,
      "componentsPerCycle": 20,
      "totalComponents": 1000,
      "memoryGrowth": 0,
      "finalMemoryLeak": 0
    }
  },
  "DOM Manipulation Performance": {
    "renderTime": 131.15605533333533,
    "memoryUsage": {
      "initial": 97976354.66666667,
      "peak": 107913296,
      "final": 103437538.66666667,
      "leak": 5461184
    },
    "domMetrics": {
      "nodes": 4,
      "depth": 1,
      "updates": 550
    },
    "timing": {
      "setup": 0.24893066666603167,
      "execution": 172.7058053333288,
      "cleanup": 27.823305333333945
    },
    "customMetrics": {
      "totalOperations": 550,
      "avgOperationTime": 0.2384655551515188,
      "finalNodeCount": 800
    }
  },
  "Complete Application Workflow": {
    "renderTime": 1393.741083666663,
    "memoryUsage": {
      "initial": 85373240,
      "peak": 149783752,
      "final": 115605336,
      "leak": 30232096
    },
    "domMetrics": {
      "nodes": 4,
      "depth": 1,
      "updates": 506
    },
    "timing": {
      "setup": 0.2374723333317282,
      "execution": 1394.0283053333333,
      "cleanup": 0.1289863333319469
    },
    "customMetrics": {
      "totalOperations": 506,
      "itemsRendered": 500,
      "viewTransitions": 3,
      "userInteractions": 2,
      "avgOperationTime": 2.7544290191040766
    }
  }
}

Benchmark Summary: 3 passed, 3 failed out of 6 total

 ❯ packages/core/__tests__/performance/baseline-benchmarks.test.ts (7 tests | 2 failed) 38243ms
   ✓ Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark basic Text component rendering  678ms
   × Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark complex List component with many items 11188ms
     → expected 2950.553999666667 to be less than 1000
   × Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark reactive state updates performance 12597ms
     → Test timed out in 12000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ Phase 5.1: Performance Baseline Benchmarks > Memory Usage Baselines > should benchmark memory usage with component creation and destruction  8192ms
   ✓ Phase 5.1: Performance Baseline Benchmarks > Memory Usage Baselines > should benchmark DOM manipulation performance  954ms
   ✓ Phase 5.1: Performance Baseline Benchmarks > Complex Workflow Performance > should benchmark full application workflow performance  4620ms
   ✓ Phase 5.1: Performance Baseline Benchmarks > should have run all performance benchmarks successfully 0ms
 ✓ packages/symbols/__tests__/icon-sets/lucide.test.ts (26 tests) 34ms
stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should start disabled by default
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should start disabled by default
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should enable debug mode
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should enable debug mode
🔧 TachUI Debug Mode Enabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should enable debug mode
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should disable debug mode
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should disable debug mode
🔧 TachUI Debug Mode Enabled
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should disable debug mode
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should accept configuration options
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should accept configuration options
🔧 TachUI Debug Mode Enabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > enable/disable functionality > should accept configuration options
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > debug attributes > should add debug attributes when enabled
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > debug attributes > should add debug attributes when enabled
🔧 TachUI Debug Mode Enabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > debug attributes > should add debug attributes when enabled
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > debug attributes > should not add debug attributes when disabled
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > debug attributes > should not add debug attributes when disabled
🔧 TachUI Debug Mode Disabled

stdout | packages/devtools/__tests__/debug/debug.test.ts > Debug System > component tree logging > should log component tree when enabled
🔧 TachUI Debug Mode Disabled

 ✓ packages/devtools/__tests__/debug/debug.test.ts (11 tests) 25ms
stdout | packages/mobile/__tests__/Alert.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/mobile/__tests__/Alert.test.ts (6 tests) 4ms
 ✓ packages/forms/__tests__/textfield-formatters.test.ts (7 tests) 91ms
 ✓ packages/core/__tests__/runtime/lazy-component.test.ts (13 tests) 249ms
stdout | packages/forms/__tests__/form-container.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/assets/theme-reactivity.test.ts (4 tests) 225ms
stdout | packages/forms/__tests__/form-container.test.ts
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/form-container.test.ts (18 tests) 107ms
 ✓ packages/core/__tests__/runtime/renderer.test.ts (31 tests) 223ms
 ✓ packages/devtools/__tests__/debug/enhanced-errors-migration.test.ts (22 tests) 8ms
 ✓ packages/core/__tests__/gradients/state-gradient-asset.test.ts (24 tests) 8ms
stdout | packages/navigation/__tests__/navigation-path.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stderr | packages/navigation/__tests__/navigation-path.test.ts > Navigation Path - Path Management and Utilities > Error Handling > handles event listener errors
[TEST ERROR] Navigation path listener error: Error: Listener error
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/navigation/__tests__/navigation-path.test.ts:605:15
    at mockCall [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+spy@3.2.4/node_modules/[4m@vitest[24m/spy/dist/index.js:96:15[90m)[39m
    at spy [90m(file:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/tinyspy@4.0.3/node_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/navigation/src/navigation-path.ts:511:11
    at Set.forEach (<anonymous>)
    at NavigationPath._notifyListeners [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/navigation/src/navigation-path.ts:509:23[90m)[39m
    at NavigationPath.append [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/navigation/src/navigation-path.ts:102:10[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/navigation/__tests__/navigation-path.test.ts:610:12
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Users/whoughton/Dev/tach-ui/tachUI/[39mnode_modules/[4m.pnpm[24m/@vitest+runner@3.2.4/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26

stdout | packages/primitives/__tests__/display/Text.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/primitives/__tests__/controls/Button.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/navigation/__tests__/navigation-path.test.ts (59 tests) 112ms
 ✓ packages/primitives/__tests__/display/Text.test.ts (68 tests) 9ms
 ✓ packages/primitives/__tests__/controls/Button.test.ts (73 tests) 14ms
stdout | packages/core/__tests__/modifiers/event-modifiers.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should complete full plugin lifecycle successfully
📦 Component "TestComponent" registered (test)
📦 Component "AnotherComponent" registered (test)
⚙️ Service "testConfig" registered
⚙️ Service "testUtility" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should complete full plugin lifecycle successfully
✅ Plugin "test-integration-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should complete full plugin lifecycle successfully
🗑️ Unregistered 2 components from plugin "test-integration-plugin": TestComponent, AnotherComponent
Test plugin uninstalled

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should complete full plugin lifecycle successfully
🗑️ Plugin "test-integration-plugin" uninstalled successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should handle multiple plugins with interdependencies
⚙️ Service "baseService" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should handle multiple plugins with interdependencies
✅ Plugin "base-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should handle multiple plugins with interdependencies
⚙️ Service "dependentService" registered
📦 Component "DependentComponent" registered (dependent)

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > End-to-End Plugin Workflow > should handle multiple plugins with interdependencies
✅ Plugin "dependent-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Error Handling Integration > should handle uninstallation errors gracefully
⚙️ Service "problemService" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Error Handling Integration > should handle uninstallation errors gracefully
✅ Plugin "problematic-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Error Handling Integration > should handle uninstallation errors gracefully
🗑️ Plugin "problematic-plugin" uninstalled successfully (cleanup failed)

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Real-World Usage Patterns > should support forms plugin-like registration pattern
📦 Component "Form" registered (forms)
📦 Component "TextField" registered (forms)
📦 Component "Button" registered (forms)
⚙️ Service "formsConfig" registered
⚙️ Service "validation" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Real-World Usage Patterns > should support forms plugin-like registration pattern
✅ Plugin "forms-like-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Real-World Usage Patterns > should support symbols plugin-like usage without plugin interface
📦 Component "Symbol" registered (symbols)

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Performance and Scale Integration > should handle large numbers of components and services efficiently
📦 Component "Component0" registered (large)
📦 Component "Component1" registered (large)
📦 Component "Component2" registered (large)
📦 Component "Component3" registered (large)
📦 Component "Component4" registered (large)
📦 Component "Component5" registered (large)
📦 Component "Component6" registered (large)
📦 Component "Component7" registered (large)
📦 Component "Component8" registered (large)
📦 Component "Component9" registered (large)
📦 Component "Component10" registered (large)
📦 Component "Component11" registered (large)
📦 Component "Component12" registered (large)
📦 Component "Component13" registered (large)
📦 Component "Component14" registered (large)
📦 Component "Component15" registered (large)
📦 Component "Component16" registered (large)
📦 Component "Component17" registered (large)
📦 Component "Component18" registered (large)
📦 Component "Component19" registered (large)
📦 Component "Component20" registered (large)
📦 Component "Component21" registered (large)
📦 Component "Component22" registered (large)
📦 Component "Component23" registered (large)
📦 Component "Component24" registered (large)
📦 Component "Component25" registered (large)
📦 Component "Component26" registered (large)
📦 Component "Component27" registered (large)
📦 Component "Component28" registered (large)
📦 Component "Component29" registered (large)
📦 Component "Component30" registered (large)
📦 Component "Component31" registered (large)
📦 Component "Component32" registered (large)
📦 Component "Component33" registered (large)
📦 Component "Component34" registered (large)
📦 Component "Component35" registered (large)
📦 Component "Component36" registered (large)
📦 Component "Component37" registered (large)
📦 Component "Component38" registered (large)
📦 Component "Component39" registered (large)
📦 Component "Component40" registered (large)
📦 Component "Component41" registered (large)
📦 Component "Component42" registered (large)
📦 Component "Component43" registered (large)
📦 Component "Component44" registered (large)
📦 Component "Component45" registered (large)
📦 Component "Component46" registered (large)
📦 Component "Component47" registered (large)
📦 Component "Component48" registered (large)
📦 Component "Component49" registered (large)
📦 Component "Component50" registered (large)
📦 Component "Component51" registered (large)
📦 Component "Component52" registered (large)
📦 Component "Component53" registered (large)
📦 Component "Component54" registered (large)
📦 Component "Component55" registered (large)
📦 Component "Component56" registered (large)
📦 Component "Component57" registered (large)
📦 Component "Component58" registered (large)
📦 Component "Component59" registered (large)
📦 Component "Component60" registered (large)
📦 Component "Component61" registered (large)
📦 Component "Component62" registered (large)
📦 Component "Component63" registered (large)
📦 Component "Component64" registered (large)
📦 Component "Component65" registered (large)
📦 Component "Component66" registered (large)
📦 Component "Component67" registered (large)
📦 Component "Component68" registered (large)
📦 Component "Component69" registered (large)
📦 Component "Component70" registered (large)
📦 Component "Component71" registered (large)
📦 Component "Component72" registered (large)
📦 Component "Component73" registered (large)
📦 Component "Component74" registered (large)
📦 Component "Component75" registered (large)
📦 Component "Component76" registered (large)
📦 Component "Component77" registered (large)
📦 Component "Component78" registered (large)
📦 Component "Component79" registered (large)
📦 Component "Component80" registered (large)
📦 Component "Component81" registered (large)
📦 Component "Component82" registered (large)
📦 Component "Component83" registered (large)
📦 Component "Component84" registered (large)
📦 Component "Component85" registered (large)
📦 Component "Component86" registered (large)
📦 Component "Component87" registered (large)
📦 Component "Component88" registered (large)
📦 Component "Component89" registered (large)
📦 Component "Component90" registered (large)
📦 Component "Component91" registered (large)
📦 Component "Component92" registered (large)
📦 Component "Component93" registered (large)
📦 Component "Component94" registered (large)
📦 Component "Component95" registered (large)
📦 Component "Component96" registered (large)
📦 Component "Component97" registered (large)
📦 Component "Component98" registered (large)
📦 Component "Component99" registered (large)
⚙️ Service "service0" registered
⚙️ Service "service1" registered
⚙️ Service "service2" registered
⚙️ Service "service3" registered
⚙️ Service "service4" registered
⚙️ Service "service5" registered
⚙️ Service "service6" registered
⚙️ Service "service7" registered
⚙️ Service "service8" registered
⚙️ Service "service9" registered
⚙️ Service "service10" registered
⚙️ Service "service11" registered
⚙️ Service "service12" registered
⚙️ Service "service13" registered
⚙️ Service "service14" registered
⚙️ Service "service15" registered
⚙️ Service "service16" registered
⚙️ Service "service17" registered
⚙️ Service "service18" registered
⚙️ Service "service19" registered
⚙️ Service "service20" registered
⚙️ Service "service21" registered
⚙️ Service "service22" registered
⚙️ Service "service23" registered
⚙️ Service "service24" registered
⚙️ Service "service25" registered
⚙️ Service "service26" registered
⚙️ Service "service27" registered
⚙️ Service "service28" registered
⚙️ Service "service29" registered
⚙️ Service "service30" registered
⚙️ Service "service31" registered
⚙️ Service "service32" registered
⚙️ Service "service33" registered
⚙️ Service "service34" registered
⚙️ Service "service35" registered
⚙️ Service "service36" registered
⚙️ Service "service37" registered
⚙️ Service "service38" registered
⚙️ Service "service39" registered
⚙️ Service "service40" registered
⚙️ Service "service41" registered
⚙️ Service "service42" registered
⚙️ Service "service43" registered
⚙️ Service "service44" registered
⚙️ Service "service45" registered
⚙️ Service "service46" registered
⚙️ Service "service47" registered
⚙️ Service "service48" registered
⚙️ Service "service49" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > Performance and Scale Integration > should handle large numbers of components and services efficiently
✅ Plugin "large-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
📦 Component "Comp1" registered (test)
⚙️ Service "service1" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
✅ Plugin "plugin1" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
📦 Component "Comp2" registered (test)
⚙️ Service "service2" registered

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
✅ Plugin "plugin2" v1.0.0 installed successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
🗑️ Unregistered 1 components from plugin "plugin1": Comp1
🗑️ Plugin "plugin1" uninstalled successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
🗑️ Unregistered 1 components from plugin "plugin2": Comp2
🗑️ Plugin "plugin2" uninstalled successfully

stdout | packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts > Simplified Plugin System Integration > System Reset Integration > should reset entire system cleanly
🗑️ Cleared 0 registered components
🔄 TachUI instance reset completed

 ✓ packages/core/__tests__/integration/simplified-plugin-system-integration.test.ts (8 tests) 8ms
 ✓ packages/core/__tests__/modifiers/text.test.ts (21 tests) 13ms
 ✓ packages/core/__tests__/modifiers/event-modifiers.test.ts (18 tests) 11ms
stdout | packages/primitives/__tests__/css-classes/edge-cases.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/symbols/__tests__/reactive/reactive-modifiers.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/state/enhanced-state.test.ts (28 tests) 172ms
 ✓ packages/symbols/__tests__/reactive/reactive-modifiers.test.ts (9 tests) 6ms
 ✓ packages/primitives/__tests__/css-classes/edge-cases.test.ts (21 tests) 400ms
 ✓ packages/core/__tests__/modifiers/layout-infinity.test.ts (13 tests) 148ms
stdout | packages/devtools/__tests__/debug/phase-1d-integration.test.ts > Phase 1D: Developer Experience Integration (Migrated) > Integration Test: Complete Developer Experience Flow > should demonstrate complete error handling and debugging workflow
✅ Complete developer experience workflow test passed

stdout | packages/devtools/__tests__/debug/phase-1d-integration.test.ts > Phase 1D: Developer Experience Integration (Migrated) > Integration Test: Complete Developer Experience Flow > should provide comprehensive coverage statistics
📊 Phase 1D Coverage Statistics:
- Error templates: 3
- Documentation resources: 150
- IDE features enabled: 3
- Debug memory usage: 1MB

stdout | packages/devtools/__tests__/debug/phase-1d-integration.test.ts > Phase 1D: Developer Experience Integration (Migrated) > System Integration Tests > should run all system tests without errors
🛠️ Developer Experience Utils test completed

stdout | packages/devtools/__tests__/debug/phase-1d-integration.test.ts > Phase 1D: Developer Experience Integration (Migrated) > System Integration Tests > should run all system tests without errors
✅ All Phase 1D system tests completed successfully

stdout | packages/devtools/__tests__/debug/phase-1d-integration.test.ts > Phase 1D: Developer Experience Integration (Migrated) > System Integration Tests > should demonstrate 90% fix suggestion coverage target
✅ Fix suggestion coverage: 100%

 ✓ packages/devtools/__tests__/debug/phase-1d-integration.test.ts (27 tests) 8ms
stdout | packages/symbols/__tests__/components/Symbol.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stderr | packages/symbols/__tests__/components/Symbol.test.ts > Symbol Component > Icon Loading > handles different icon sets
Icon set error for "heart": Error: Icon set "custom" not registered
    at Function.get [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/icon-sets/registry.ts:19:13[90m)[39m
    at Function.loadIconInternal [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/utils/icon-loader.ts:57:35[90m)[39m
    at Function.loadIcon [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/utils/icon-loader.ts:32:30[90m)[39m
    at loadIcon [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/components/Symbol.ts:106:37[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/components/Symbol.ts:126:5
    at V.u [as fn] [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/core/dist/effect-B9Knft0b.js:6:15[90m)[39m
    at V.execute [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/core/dist/scheduler-BKeqwrYE.js:46:54[90m)[39m
    at i [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/core/dist/effect-B9Knft0b.js:12:9[90m)[39m
    at Symbol [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/components/Symbol.ts:90:3[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/__tests__/components/Symbol.test.ts:168:22

 ✓ packages/symbols/__tests__/components/Symbol.test.ts (25 tests) 18ms
stderr | LucideIconSet.loadIconInternal (/Users/whoughton/Dev/tach-ui/tachUI/packages/symbols/src/icon-sets/lucide.ts:62:17)
Icon "nonexistent-icon" (NonexistentIcon) not found in Lucide icon set

stdout | packages/symbols/__tests__/integration/symbols-basic.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/navigation/__tests__/navigation-router.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/modifiers/modifier-system.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/runtime/props.test.ts (35 tests) 19ms
stderr | packages/symbols/__tests__/integration/symbols-basic.test.ts > Symbols Integration Tests > Integration with Icon Sets > handles non-existent icon set gracefully
Icon set error for "heart": Error: Icon set "non-existent" not registered
    at Function.get [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/icon-sets/registry.ts:19:13[90m)[39m
    at Function.loadIconInternal [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/utils/icon-loader.ts:57:35[90m)[39m
    at Function.loadIcon [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/utils/icon-loader.ts:32:30[90m)[39m
    at loadIcon [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/components/Symbol.ts:106:37[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/components/Symbol.ts:126:5
    at V.u [as fn] [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/core/dist/effect-B9Knft0b.js:6:15[90m)[39m
    at V.execute [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/core/dist/scheduler-BKeqwrYE.js:46:54[90m)[39m
    at i [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/core/dist/effect-B9Knft0b.js:12:9[90m)[39m
    at Module.Symbol [90m(/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/src/components/Symbol.ts:90:3[90m)[39m
    at [90m/Users/whoughton/Dev/tach-ui/tachUI/[39mpackages/symbols/__tests__/integration/symbols-basic.test.ts:278:22

stderr | packages/symbols/__tests__/integration/symbols-basic.test.ts
Icon "heart-0" (Heart0) not found in Lucide icon set
Icon "heart-1" (Heart1) not found in Lucide icon set
Icon "heart-2" (Heart2) not found in Lucide icon set
Icon "heart-3" (Heart3) not found in Lucide icon set
Icon "heart-4" (Heart4) not found in Lucide icon set

 ✓ packages/symbols/__tests__/compatibility/variant-mapping.test.ts (35 tests) 11ms
 ✓ packages/symbols/__tests__/integration/symbols-basic.test.ts (23 tests) 107ms
 ✓ packages/navigation/__tests__/navigation-router.test.ts (37 tests) 78ms
 ✓ packages/core/__tests__/plugins/component-loader-registry.test.ts (19 tests) 207ms
 ✓ packages/core/__tests__/modifiers/modifier-system.test.ts (37 tests) 100ms
stdout | packages/responsive/__tests__/modifiers/responsive/comprehensive-browser-tests.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/responsive/__tests__/modifiers/responsive/comprehensive-browser-tests.test.ts > Comprehensive Browser Compatibility Tests > Edge Cases and Error Handling > handles missing window object gracefully
[ResponsiveDevTools] ResponsiveDevTools: Enabled
🔍 TachUI Responsive State
  Current breakpoint: base
  Viewport: 0×0
  Configuration: {
    base: [32m'0px'[39m,
    sm: [32m'640px'[39m,
    md: [32m'768px'[39m,
    lg: [32m'1024px'[39m,
    xl: [32m'1280px'[39m,
    [32m'2xl'[39m: [32m'1536px'[39m
  }
  Media Query Results:
    Mobile: false
    Tablet: false
    Desktop: false
    Touch Device: false
    Dark Mode: false
    Reduced Motion: false
🔍 TachUI Responsive State
  Current breakpoint: base
  Viewport: 0×0
  Configuration: {
    base: [32m'0px'[39m,
    sm: [32m'640px'[39m,
    md: [32m'768px'[39m,
    lg: [32m'1024px'[39m,
    xl: [32m'1280px'[39m,
    [32m'2xl'[39m: [32m'1536px'[39m
  }
  Media Query Results:
    Mobile: false
    Tablet: false
    Desktop: false
    Touch Device: false
    Dark Mode: false
    Reduced Motion: false

stdout | packages/responsive/__tests__/modifiers/responsive/comprehensive-browser-tests.test.ts > Comprehensive Browser Compatibility Tests > Development Tools Integration > development tools work in development mode
[ResponsiveDevTools] ResponsiveDevTools: Enabled
🔍 TachUI Responsive State
  Current breakpoint: base
  Viewport: 0×0
  Configuration: {
    base: [32m'0px'[39m,
    sm: [32m'640px'[39m,
    md: [32m'768px'[39m,
    lg: [32m'1024px'[39m,
    xl: [32m'1280px'[39m,
    [32m'2xl'[39m: [32m'1536px'[39m
  }
  Media Query Results:
    Mobile: false
    Tablet: false
    Desktop: false
    Touch Device: false
    Dark Mode: false
    Reduced Motion: false
🔍 Responsive Value - Test Value
  Responsive object: { base: [32m'small'[39m, md: [32m'medium'[39m, lg: [32m'large'[39m }
  Resolved value (base): small
  Defined breakpoints:
    → base: small
      md: medium
      lg: large

stderr | packages/responsive/__tests__/modifiers/responsive/comprehensive-browser-tests.test.ts > Comprehensive Browser Compatibility Tests > Development Tools Integration > development tools are disabled in production
ResponsiveDevTools: Not enabling in production mode

 ✓ packages/responsive/__tests__/modifiers/responsive/comprehensive-browser-tests.test.ts (28 tests | 2 skipped) 132ms
 ✓ packages/symbols/__tests__/compatibility/category-mapping.test.ts (36 tests) 55ms
stdout | packages/navigation/__tests__/enhanced-tab-view.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/navigation/__tests__/enhanced-tab-view.test.ts > Enhanced TabView > Tab Coordinator Enhanced Methods > should support tab reordering
Reordering tabs: [ [32m'search'[39m, [32m'home'[39m, [32m'profile'[39m, [32m'settings'[39m ]

stdout | packages/navigation/__tests__/enhanced-tab-view.test.ts > Enhanced TabView > Tab Coordinator Enhanced Methods > should validate tab reordering with invalid IDs
Reordering tabs: [ [32m'search'[39m, [32m'invalid'[39m, [32m'home'[39m, [32m'nonexistent'[39m ]

 ✓ packages/forms/__tests__/validation.test.ts (4 tests) 70ms
 ✓ packages/navigation/__tests__/enhanced-tab-view.test.ts (30 tests) 46ms
stdout | packages/navigation/__tests__/navigation-hooks.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/dist/validation/index.js:836:21
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized

stdout | packages/core/dist/validation/index.js:838:16
✅ Runtime validation: enabled

stdout | packages/core/dist/validation/index.js:838:63
✅ Component validation: enabled (33 components)

stdout | packages/core/dist/validation/index.js:838:128
✅ Modifier validation: enabled

stdout | packages/core/dist/validation/index.js:838:176
✅ Build-time validation: auto-detecting

stdout | packages/core/dist/validation/index.js:838:233
✅ Smart error recovery: enabled

stdout | packages/core/dist/validation/index.js:838:282
✅ Enhanced error reporting: enabled

stdout | packages/core/dist/validation/index.js:838:335
✅ Performance optimization: enabled

stdout | packages/core/dist/validation/index.js:838:388
✅ Debug tools: available

stdout | packages/core/dist/validation/index.js:838:430
✅ Developer experience: enhanced templates, IDE integration, documentation

stdout | packages/core/dist/validation/index.js:840:16
✅ Advanced debugging: visual overlays, state inspection, trend analysis

stdout | packages/core/dist/validation/index.js:842:16
ℹ️ Use ValidationSetup.development() for full features

stdout | Timeout.registerFormsValidators [as _onTimeout] (/Users/whoughton/Dev/tach-ui/tachUI/packages/forms/src/validation/component-validation.ts:412:15)
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/symbols/__tests__/compatibility/weight-mapping.test.ts (42 tests) 38ms
stdout | packages/responsive/__tests__/modifiers/responsive/advanced-media-queries.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/navigation/__tests__/navigation-hooks.test.ts (32 tests) 35ms
stdout | packages/responsive/__tests__/modifiers/responsive/advanced-utilities.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/responsive/__tests__/modifiers/responsive/advanced-media-queries.test.ts (30 tests) 57ms
 ✓ packages/responsive/__tests__/modifiers/responsive/advanced-utilities.test.ts (21 tests) 15ms
stdout | packages/primitives/__tests__/controls/Button-states-integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/controls/Button-states-integration.test.ts (24 tests) 7ms
 ✓ packages/effects/__tests__/filters.test.ts (13 tests) 5ms
 ✓ packages/core/__tests__/modifiers/as-html.test.ts (17 tests) 141ms
 ✓ packages/symbols/__tests__/rendering/AdvancedRenderer.test.ts (16 tests) 7ms
stdout | packages/symbols/__tests__/compatibility/swiftui-shim.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/viewport/__tests__/windowgroup-advanced-features.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stderr | packages/symbols/__tests__/compatibility/swiftui-shim.test.ts > SwiftUI Compatibility Shim > Error Handling > should handle invalid props gracefully
SF Symbol "undefined" has no Lucide equivalent. Using fallback.

stderr | packages/symbols/__tests__/compatibility/swiftui-shim.test.ts > SwiftUI Compatibility Shim > Error Handling > should handle undefined systemName
SF Symbol "undefined" has no Lucide equivalent. Using fallback.

 ✓ packages/symbols/__tests__/compatibility/swiftui-shim.test.ts (25 tests) 14ms
 ✓ packages/core/__tests__/assets/FontAsset.test.ts (25 tests) 65ms
stdout | packages/navigation/__tests__/navigation-modifiers.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/viewport/__tests__/windowgroup-advanced-features.test.ts (19 tests) 73ms
 ✓ packages/navigation/__tests__/navigation-modifiers.test.ts (30 tests) 19ms
stdout | packages/flow-control/__tests__/iteration/index.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/primitives/__tests__/forms/Form.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/forms/Form.test.ts (6 tests) 28ms
 ✓ packages/flow-control/__tests__/iteration/index.test.ts (7 tests) 3ms
 ✓ packages/forms/__tests__/comprehensive-validation.test.ts (5 tests) 62ms
stdout | packages/core/dist/validation/index.js:836:21
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized

stdout | packages/core/dist/validation/index.js:838:16
✅ Runtime validation: enabled

stdout | packages/core/dist/validation/index.js:838:63
✅ Component validation: enabled (33 components)

stdout | packages/core/dist/validation/index.js:838:128
✅ Modifier validation: enabled

stdout | packages/core/dist/validation/index.js:838:176
✅ Build-time validation: auto-detecting

stdout | packages/core/dist/validation/index.js:838:233
✅ Smart error recovery: enabled

stdout | packages/core/dist/validation/index.js:838:282
✅ Enhanced error reporting: enabled

stdout | packages/core/dist/validation/index.js:838:335
✅ Performance optimization: enabled

stdout | packages/core/dist/validation/index.js:838:388
✅ Debug tools: available

stdout | packages/core/dist/validation/index.js:838:430
✅ Developer experience: enhanced templates, IDE integration, documentation

stdout | packages/core/dist/validation/index.js:840:16
✅ Advanced debugging: visual overlays, state inspection, trend analysis

stdout | packages/core/dist/validation/index.js:842:16
ℹ️ Use ValidationSetup.development() for full features

stdout | Timeout.registerFormsValidators [as _onTimeout] (/Users/whoughton/Dev/tach-ui/tachUI/packages/forms/src/validation/component-validation.ts:412:15)
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/symbols/__tests__/utils/performance.test.ts (30 tests) 34ms
stdout | packages/grid/__tests__/components/Grid.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/grid/__tests__/components/Grid.test.ts (31 tests) 50ms
stdout | packages/mobile/__tests__/ActionSheet.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/mobile/__tests__/ActionSheet.test.ts (24 tests) 32ms
stdout | packages/data/__tests__/List.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/navigation/__tests__/programmatic-navigation.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/data/__tests__/Menu.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/data/__tests__/List.test.ts (63 tests) 96ms
 ✓ packages/data/__tests__/Menu.test.ts (35 tests) 8ms
 ✓ packages/navigation/__tests__/programmatic-navigation.test.ts (50 tests) 11ms
stdout | packages/forms/__tests__/Slider.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/forms/__tests__/Slider.test.ts (4 tests) 5ms
stdout | packages/viewport/__tests__/viewport-manager.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/viewport/__tests__/viewport-manager.test.ts (22 tests) 70ms
stdout | packages/navigation/__tests__/navigation-manager.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stderr | packages/navigation/__tests__/navigation-manager.test.ts > Navigation Manager - Global Navigation Coordination > Navigation Coordinator > handles navigation conflicts
Coordinator with ID "coordinator-1756848278337" already exists

 ✓ packages/navigation/__tests__/navigation-manager.test.ts (39 tests) 106ms
 ✓ packages/core/__tests__/assets/assets.test.ts (40 tests) 17ms
 ✓ packages/core/__tests__/components/wrapper.test.ts (50 tests) 8ms
stdout | packages/mobile/__tests__/ScrollView.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/mobile/__tests__/ScrollView.test.ts (34 tests) 9ms
stdout | packages/core/__tests__/reactive/computed-modifiers.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/runtime/context.test.ts (33 tests) 9ms
 ✓ packages/symbols/__tests__/compatibility/migration-utilities.test.ts (36 tests) 13ms
 ✓ packages/core/__tests__/reactive/computed-modifiers.test.ts (14 tests) 42ms
stdout | packages/navigation/__tests__/navigation-link.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/navigation/__tests__/navigation-link.test.ts (30 tests) 40ms
 ✓ packages/core/__tests__/runtime/renderer-simple.test.ts (2 tests) 11ms
 ✓ packages/effects/__tests__/backdrop.test.ts (34 tests) 27ms
stdout | packages/navigation/__tests__/accessibility.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/core/__tests__/modifiers/lifecycle-modifiers.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/navigation/__tests__/accessibility.test.ts (29 tests) 63ms
 ✓ packages/core/__tests__/modifiers/lifecycle-modifiers.test.ts (23 tests) 62ms
stderr | packages/devtools/__tests__/debug/enhanced-errors.test.ts > Enhanced Error System > DeveloperWarnings > should clear warnings
🟡 TachUI Deprecation Warning in TestComponent: "oldAPI" is deprecated. Use "newAPI" instead.
See: https://docs.tachui.dev/migration/deprecations

 ✓ packages/devtools/__tests__/debug/enhanced-errors.test.ts (38 tests) 38ms
 ✓ packages/core/__tests__/css-classes/css-class-manager.test.ts (30 tests) 8ms
stdout | packages/grid/__tests__/modifiers/grid-spanning.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/grid/__tests__/modifiers/grid-spanning.test.ts (44 tests) 148ms
 ✓ packages/core/__tests__/modifiers/font.test.ts (20 tests) 20ms
 ✓ packages/core/__tests__/state/component-context.test.ts (27 tests) 20ms
 ✓ packages/core/__tests__/gradients/state-background-modifier.test.ts (19 tests) 20ms
stdout | packages/core/__tests__/components/Layout-Priority.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/navigation/__tests__/advanced-tab-view.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/navigation/__tests__/advanced-tab-view.test.ts > Advanced TabView Features > AdvancedTabView > supports tab reordering
Reordering tab from 0 to 2

 ✓ packages/navigation/__tests__/advanced-tab-view.test.ts (28 tests) 26ms
 ✓ packages/core/__tests__/components/Layout-Priority.test.ts (18 tests) 15ms
stdout | packages/flow-control/__tests__/iteration/ForEach.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/flow-control/__tests__/iteration/ForEach.test.ts (22 tests) 56ms
stdout | packages/devtools/__tests__/testing/testing.test.ts > Testing Utilities > Integration scenarios > should support development workflow
Running test: form submission
Running accessibility tests
Creating snapshot: Form default state
Creating snapshot: Form validation error

 ✓ packages/devtools/__tests__/testing/testing.test.ts (16 tests) 6ms
 ✓ packages/core/__tests__/gradients/state-gradient-integration.test.ts (11 tests) 6ms
stdout | packages/primitives/__tests__/css-classes/component-integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/css-classes/component-integration.test.ts (21 tests) 11ms
 ✓ packages/core/__tests__/reactive/signal.test.ts (22 tests) 73ms
 ✓ packages/core/__tests__/modifiers/attributes.test.ts (26 tests) 9ms
 ✓ packages/core/__tests__/performance/regression-detection.test.ts (14 tests) 6ms
stdout | packages/devtools/__tests__/profiler/profiler.test.ts > Performance Profiler > Integration scenarios > should handle development-only usage
PerformanceProfiler initialized with config: {}
MemoryProfiler started with config: {}
Bundle analysis started

 ✓ packages/devtools/__tests__/profiler/profiler.test.ts (9 tests) 14ms
stdout | packages/primitives/__tests__/forms/BasicInput.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/forms/BasicInput.test.ts (32 tests) 7ms
 ✓ packages/core/__tests__/modifiers/border.test.ts (25 tests) 13ms
stdout | packages/primitives/__tests__/display/Image.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/display/Image.test.ts (39 tests) 37ms
stdout | packages/navigation/__tests__/navigation-environment.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/Select.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/primitives/__tests__/layout/Spacer.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/navigation/__tests__/navigation-environment.test.ts (28 tests) 7ms
 ✓ packages/primitives/__tests__/layout/Spacer.test.ts (35 tests) 9ms
stdout | packages/forms/__tests__/Select.test.ts
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/Select.test.ts (4 tests) 62ms
 ✓ packages/core/__tests__/integration/batching-enabled.test.ts (3 tests) 3ms
stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedPluginManager > should install and manage plugins correctly
⚙️ Service "test-service" registered

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedPluginManager > should install and manage plugins correctly
✅ Plugin "test-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedPluginManager > should uninstall plugins correctly
⚙️ Service "test-service" registered

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedPluginManager > should uninstall plugins correctly
✅ Plugin "test-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedPluginManager > should uninstall plugins correctly
🗑️ Plugin "test-plugin" uninstalled successfully

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedComponentRegistry > should register and retrieve components
📦 Component "TestComponent" registered (test)

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedComponentRegistry > should list components by category
📦 Component "TestComponent1" registered (test)
📦 Component "TestComponent2" registered (test)

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedComponentRegistry > should unregister components correctly
📦 Component "TestComponent" registered
🗑️ Component "TestComponent" unregistered

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should integrate plugins and components
📦 Component "Button" registered (input)

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should integrate plugins and components
✅ Plugin "ui-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should handle services correctly
⚙️ Service "config" registered
🗑️ Service "config" unregistered

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should reset correctly
⚙️ Service "test-service" registered

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should reset correctly
✅ Plugin "test-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should reset correctly
⚙️ Service "direct-service" registered
🗑️ Plugin "test-plugin" uninstalled successfully

stdout | packages/core/__tests__/plugins/simplified-plugin-system.test.ts > Simplified Plugin System > SimplifiedTachUIInstance > should reset correctly
🗑️ Cleared 0 registered components
🔄 TachUI instance reset completed

 ✓ packages/core/__tests__/plugins/simplified-plugin-system.test.ts (10 tests) 21ms
stdout | packages/flow-control/__tests__/conditional/Show.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/flow-control/__tests__/conditional/Show.test.ts (15 tests) 5ms
 ✓ packages/core/__tests__/compiler.test.ts (33 tests) 7ms
stdout | packages/navigation/__tests__/simple-tab-view.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/navigation/__tests__/simple-tab-view.test.ts (23 tests) 15ms
stdout | packages/flow-control/__tests__/integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/symbols/__tests__/animations/SymbolAnimations.test.ts (28 tests) 5ms
 ✓ packages/flow-control/__tests__/integration.test.ts (15 tests) 8ms
 ✓ packages/symbols/__tests__/utils/custom-icon-set-builder.test.ts (29 tests) 70ms
stdout | packages/primitives/__tests__/integration/real-plugin-integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/modifiers/error-logging.test.ts (2 tests) 4ms
stdout | packages/grid/__tests__/components/grid-animations.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/integration/real-plugin-integration.test.ts (14 tests) 25ms
 ✓ packages/grid/__tests__/components/grid-animations.test.ts (26 tests) 23ms
 ✓ packages/core/__tests__/plugins/utils.test.ts (16 tests) 5ms
stdout | packages/forms/__tests__/TextField.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

stdout | packages/forms/__tests__/TextField.test.ts
🔍 [@tachui/advanced-forms] Registered 6 component validators

 ✓ packages/forms/__tests__/TextField.test.ts (4 tests) 6ms
 ✓ packages/core/__tests__/modifiers/as-html-integration.test.ts (10 tests) 26ms
 ✓ packages/core/__tests__/modifiers/padding.test.ts (35 tests) 5ms
stdout | packages/symbols/__tests__/reactive/modifier-integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/constants/layout.test.ts (23 tests) 5ms
 ✓ packages/symbols/__tests__/reactive/modifier-integration.test.ts (8 tests) 17ms
 ✓ packages/core/__tests__/gradients/angular-gradient.test.ts (8 tests) 14ms
stdout | packages/symbols/__tests__/utils/accessibility.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/symbols/__tests__/utils/accessibility.test.ts (33 tests) 23ms
 ✓ packages/core/__tests__/gradients/gradient-asset.test.ts (5 tests) 16ms
stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Plugin Installation > should install plugins through the global instance
✅ Plugin "test-install" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Plugin Management > should track installed plugins
✅ Plugin "plugin-one" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Plugin Management > should track installed plugins
✅ Plugin "plugin-two" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Plugin Management > should uninstall plugins correctly
✅ Plugin "uninstall-test" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Plugin Management > should uninstall plugins correctly
🗑️ Plugin "uninstall-test" uninstalled successfully

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Component Registration > should register components through global function
📦 Component "TestComponent" registered

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Component Registration > should register components with options
📦 Component "TestComponent" registered (testing)

stderr | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Component Registration > should register components with options
Component TestComponent already registered, overwriting

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Service Registration > should register services through global function
⚙️ Service "testService" registered

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Service Registration > should handle service registration with different types
⚙️ Service "string" registered
⚙️ Service "number" registered
⚙️ Service "function" registered

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Integration Scenarios > should allow plugins to register components and services
📦 Component "IntegrationComponent" registered (integration)
⚙️ Service "integrationService" registered

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Integration Scenarios > should allow plugins to register components and services
✅ Plugin "integration-plugin" v1.0.0 installed successfully

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Integration Scenarios > should allow plugins to register components and services
🗑️ Component "IntegrationComponent" unregistered

stdout | packages/core/__tests__/plugins/index.test.ts > Simplified Plugin System Integration > Integration Scenarios > should allow plugins to register components and services
🗑️ Plugin "integration-plugin" uninstalled successfully

 ✓ packages/core/__tests__/plugins/index.test.ts (11 tests) 12ms
stdout | packages/responsive/__tests__/modifiers/responsive/layout-patterns.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/responsive/__tests__/modifiers/responsive/layout-patterns.test.ts (39 tests) 20ms
stdout | packages/responsive/__tests__/modifiers/responsive/responsive-basic.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/responsive/__tests__/modifiers/responsive/responsive-basic.test.ts (18 tests) 8ms
 ✓ packages/devtools/__tests__/profiler/enhanced-codegen.test.ts (3 tests) 25ms
 ✓ packages/core/__tests__/modifiers/margin-string-support.test.ts (5 tests) 2ms
 ✓ packages/core/__tests__/constants/frame-utils.test.ts (28 tests) 4ms
stdout | packages/forms/__tests__/DatePicker.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/css-classes/component-base.test.ts (26 tests) 6ms
 ✓ packages/forms/__tests__/DatePicker.test.ts (4 tests) 172ms
stdout | packages/responsive/__tests__/modifiers/responsive/responsive-reactivity.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/responsive/__tests__/modifiers/responsive/responsive-reactivity.test.ts (8 tests) 3ms
 ✓ packages/symbols/__tests__/icon-sets/registry.test.ts (16 tests) 4ms
stdout | packages/primitives/__tests__/controls/Toggle.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/controls/Toggle.test.ts (7 tests) 3ms
 ✓ packages/core/__tests__/modifiers/new-modifiers.test.ts (5 tests) 6ms
 ✓ packages/core/__tests__/modifiers/margin.test.ts (19 tests) 5ms
stdout | packages/primitives/__tests__/display/ImageAsset-reactive.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/display/ImageAsset-reactive.test.ts (4 tests) 16ms
 ✓ packages/core/__tests__/assets/register-asset-overrides.test.ts (5 tests) 10ms
 ✓ packages/effects/__tests__/effects.test.ts (5 tests) 2ms
stdout | packages/forms/__tests__/Stepper.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/forms/__tests__/Stepper.test.ts (4 tests) 4ms
stdout | packages/primitives/__tests__/controls/Button-assets.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/controls/Button-assets.test.ts (15 tests) 4ms
 ✓ packages/core/__tests__/gradients/repeating-gradients.test.ts (10 tests) 3ms
 ✓ packages/core/__tests__/gradients/linear-gradient.test.ts (7 tests) 2ms
 ✓ packages/effects/__tests__/transforms.test.ts (13 tests) 3ms
stdout | packages/primitives/__tests__/controls/Picker.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/controls/Picker.test.ts (6 tests) 17ms
 ✓ packages/core/__tests__/runtime/component-context-basic.test.ts (5 tests) 2ms
 ✓ packages/core/__tests__/gradients/radial-gradient.test.ts (8 tests) 3ms
stdout | packages/primitives/__tests__/display/ImageAsset-integration.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/primitives/__tests__/display/ImageAsset-integration.test.ts (4 tests) 3ms
 ✓ packages/core/__tests__/modifiers/padding-string-support.test.ts (5 tests) 2ms
 ✓ packages/devtools/__tests__/profiler/advanced-parser.test.ts (2 tests) 2ms
stdout | packages/core/__tests__/modifiers/gradient-text-modifier.test.ts
🔍 TachUI Complete Validation System (Phases 1A-1D) initialized
✅ Runtime validation: enabled
✅ Component validation: enabled (33 components)
✅ Modifier validation: enabled
✅ Build-time validation: auto-detecting
✅ Smart error recovery: enabled
✅ Enhanced error reporting: enabled
✅ Performance optimization: enabled
✅ Debug tools: available
✅ Developer experience: enhanced templates, IDE integration, documentation
✅ Advanced debugging: visual overlays, state inspection, trend analysis
ℹ️ Use ValidationSetup.development() for full features

 ✓ packages/core/__tests__/modifiers/gradient-text-modifier.test.ts (5 tests) 3ms

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 2 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark complex List component with many items
AssertionError: expected 2950.553999666667 to be less than 1000
 ❯ packages/core/__tests__/performance/baseline-benchmarks.test.ts:175:41
    173|       })
    174| 
    175|       expect(result.current.renderTime).toBeLessThan(1000) // Should r…
       |                                         ^
    176|       expect(result.current.customMetrics?.avgTimePerItem).toBeLessTha…
    177|     }, 15000)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/2]⎯

 FAIL  packages/core/__tests__/performance/baseline-benchmarks.test.ts > Phase 5.1: Performance Baseline Benchmarks > Component Render Performance Baselines > should benchmark reactive state updates performance
Error: Test timed out in 12000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ packages/core/__tests__/performance/baseline-benchmarks.test.ts:179:5
    177|     }, 15000)
    178| 
    179|     it('should benchmark reactive state updates performance', async ()…
       |     ^
    180|       const reactiveStateBenchmark: PerformanceBenchmark = {
    181|         name: 'Reactive State Updates',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/2]⎯


 Test Files  1 failed | 176 passed (177)
      Tests  2 failed | 3685 passed | 2 skipped (3689)
   Start at  17:23:25
   Duration  92.50s (transform 27.11s, setup 20.67s, collect 112.29s, tests 166.30s, environment 348.34s, prepare 46.27s)

 ELIFECYCLE  Test failed. See above for more details.
